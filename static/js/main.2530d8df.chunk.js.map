{"version":3,"sources":["App.js","CalculatorButton.js","registerServiceWorker.js","index.js"],"names":["App","_this","Object","C_Users_Joshua_WebstormProjects_Assignment2_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Joshua_WebstormProjects_Assignment2_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Joshua_WebstormProjects_Assignment2_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","onClick","button","calculate","clear","clearEntry","setState","result","state","interim_result","final_expression","bracketFix","eval","prev_result","e","slice","expression","replace","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_CalculatorButton__WEBPACK_IMPORTED_MODULE_7__","Component","CalculatorButton","name","props","target","React","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","react_default","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2530d8df.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport CalculatorButton from \"./CalculatorButton\";\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            prev_result: \"\",\r\n            result: \"\"\r\n        }\r\n    }\r\n\r\n    onClick = button => {\r\n\r\n        if(button === \"=\"){\r\n            this.calculate()\r\n        }\r\n\r\n        else if(button === \"C\"){\r\n            this.clear()\r\n        }\r\n        else if(button === \"CE\"){\r\n            this.clearEntry()\r\n        }\r\n\r\n        else {\r\n            this.setState({\r\n                result: this.state.result + button\r\n            })\r\n        }\r\n    };\r\n\r\n    calculate = () => {\r\n        const interim_result = this.state.result\r\n\r\n        const final_expression = this.bracketFix(interim_result)\r\n        try {\r\n            this.setState({\r\n                result: (eval(final_expression) || \"\" ) + \"\",\r\n                prev_result: interim_result + \"=\" + eval(final_expression)\r\n            })\r\n        } catch (e) {\r\n            this.setState({\r\n                result: \"\",\r\n                prev_result: \"Error\"\r\n            })\r\n\r\n        }\r\n    };\r\n\r\n    clear = () => {\r\n        this.setState({\r\n            result: \"\"\r\n        })\r\n    };\r\n\r\n    clearEntry = () => {\r\n        this.setState({\r\n            result: this.state.result.slice(0, -1)\r\n        })\r\n    };\r\n\r\n    bracketFix = (expression) => {\r\n        return expression.replace(/([\\d)])\\(/, \"$1*(\")\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"calculator-body\">\r\n                    <h1>SENG 513 Calculator</h1>\r\n                    <div className=\"previousResult\">\r\n                        {this.state.prev_result}\r\n                    </div>\r\n                    <div className=\"result\">\r\n                        {this.state.result}\r\n                    </div>\r\n                    <CalculatorButton onClick={this.onClick}/>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nclass CalculatorButton extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"button\">\r\n                <button name=\"(\" onClick={e => this.props.onClick(e.target.name)}>(</button>\r\n                <button name=\")\" onClick={e => this.props.onClick(e.target.name)}>)</button>\r\n                <button name=\"CE\" onClick={e => this.props.onClick(e.target.name)}>CE</button>\r\n                <button name=\"C\" onClick={e => this.props.onClick(e.target.name)}>C</button><br/>\r\n\r\n                <button name=\"7\" onClick={e => this.props.onClick(e.target.name)}>7</button>\r\n                <button name=\"8\" onClick={e => this.props.onClick(e.target.name)}>8</button>\r\n                <button name=\"9\" onClick={e => this.props.onClick(e.target.name)}>9</button>\r\n                <button name=\"+\" onClick={e => this.props.onClick(e.target.name)}>+</button><br/>\r\n\r\n                <button name=\"4\" onClick={e => this.props.onClick(e.target.name)}>4</button>\r\n                <button name=\"5\" onClick={e => this.props.onClick(e.target.name)}>5</button>\r\n                <button name=\"6\" onClick={e => this.props.onClick(e.target.name)}>6</button>\r\n                <button name=\"-\" onClick={e => this.props.onClick(e.target.name)}>-</button><br/>\r\n\r\n                <button name=\"1\" onClick={e => this.props.onClick(e.target.name)}>1</button>\r\n                <button name=\"2\" onClick={e => this.props.onClick(e.target.name)}>2</button>\r\n                <button name=\"3\" onClick={e => this.props.onClick(e.target.name)}>3</button>\r\n                <button name=\"*\" onClick={e => this.props.onClick(e.target.name)}>x</button><br/>\r\n\r\n                <button name=\".\" onClick={e => this.props.onClick(e.target.name)}>.</button>\r\n                <button name=\"0\" onClick={e => this.props.onClick(e.target.name)}>0</button>\r\n                <button name=\"=\" onClick={e => this.props.onClick(e.target.name)}>=</button>\r\n                <button name=\"/\" onClick={e => this.props.onClick(e.target.name)}>÷</button><br/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CalculatorButton;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}